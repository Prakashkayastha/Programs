PROCESS BEFORE OUTPUT.
  CALL SUBSCREEN sub INCLUDING sy-repid '9047'.
  MODULE status_9024.


PROCESS AFTER INPUT.
  CALL SUBSCREEN sub.
  MODULE user_command_9024.




MODULE status_9024 OUTPUT.
 SET PF-STATUS 'PFSTATUS3'.
 SET TITLEBAR 'TITLE'.

***********Object Part*************************
IF CC3 IS INITIAL.
  CREATE OBJECT cc3
    EXPORTING
*      parent                      =                  " Parent container
      container_name              =  'CC3'                " Name of the Screen CustCtrl Name to Link Container To
*      style                       =                  " Windows Style Attributes Applied to this Container
*      lifetime                    = lifetime_default " Lifetime
*      repid                       =                  " Screen to Which this Container is Linked
*      dynnr                       =                  " Report To Which this Container is Linked
*      no_autodef_progid_dynnr     =                  " Don't Autodefined Progid and Dynnr?
    EXCEPTIONS
      cntl_error                  = 1                " CNTL_ERROR
      cntl_system_error           = 2                " CNTL_SYSTEM_ERROR
      create_error                = 3                " CREATE_ERROR
      lifetime_error              = 4                " LIFETIME_ERROR
      lifetime_dynpro_dynpro_link = 5                " LIFETIME_DYNPRO_DYNPRO_LINK
      others                      = 6
    .
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*     WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

*************Grid Part************************

  CREATE OBJECT grid
    EXPORTING
*      i_shellstyle            = 0                " Control Style
*      i_lifetime              =                  " Lifetime
      i_parent                =  CC3                " Parent Container
*      i_appl_events           = space            " Register Events as Application Events
*      i_parentdbg             =                  " Internal, Do not Use
*      i_applogparent          =                  " Container for Application Log
*      i_graphicsparent        =                  " Container for Graphics
*      i_name                  =                  " Name
*      i_fcat_complete         = space            " Boolean Variable (X=True, Space=False)
*      o_previous_sral_handler =
    EXCEPTIONS
      error_cntl_create       = 1                " Error when creating the control
      error_cntl_init         = 2                " Error While Initializing Control
      error_cntl_link         = 3                " Error While Linking Control
      error_dp_create         = 4                " Error While Creating DataProvider Control
      others                  = 5
    .
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*     WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

*
    CREATE OBJECT in_event.
     SET HANDLER in_event->user_command_mt FOR grid.
*
    call METHOD grid->register_edit_event
      EXPORTING
        i_event_id =  cl_gui_alv_grid=>mc_evt_enter                " Event ID
      EXCEPTIONS
        error      = 1                " Error
        others     = 2
      .
    IF SY-SUBRC <> 0.
*     MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*       WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    call METHOD grid->register_edit_event
      EXPORTING
        i_event_id =  cl_gui_alv_grid=>mc_evt_modified                 " Event ID
      EXCEPTIONS
        error      = 1                " Error
        others     = 2
      .
    IF SY-SUBRC <> 0.
*     MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*       WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
    SET HANDLER in_event->changed_mt FOR grid.




****************Build The Fieldcat*************************
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
   EXPORTING
*     I_BUFFER_ACTIVE              =
     I_STRUCTURE_NAME             = 'ZST_PK_TASK7'
*     I_CLIENT_NEVER_DISPLAY       = 'X'
*     I_BYPASSING_BUFFER           =
*     I_INTERNAL_TABNAME           =
    CHANGING
      ct_fieldcat                  = LT_FIELDCAT
   EXCEPTIONS
     INCONSISTENT_INTERFACE       = 1
     PROGRAM_ERROR                = 2
     OTHERS                       = 3
            .
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

   LOOP AT lt_fieldcat ASSIGNING FIELD-SYMBOL(<lfs_fieldcat>).
      IF <lfs_fieldcat>-fieldname = 'RETURNABLE'.
        <lfs_fieldcat>-checkbox = abap_true.
        <lfs_fieldcat>-edit = abap_true.

      ENDIF.
      IF <lfs_fieldcat>-fieldname = 'CONTAINER_NAME' OR
         <lfs_fieldcat>-fieldname = 'CONTAINER_QTY' OR
         <lfs_fieldcat>-fieldname = 'CONTAINER_UOM'.

        <lfs_fieldcat>-edit = abap_true.

      ENDIF.

    ENDLOOP.



****************************************
    APPEND cl_gui_alv_grid=>mc_fc_loc_append_row TO lt_excluding.
    APPEND cl_gui_alv_grid=>mc_fc_loc_cut TO lt_excluding.
    APPEND cl_gui_alv_grid=>mc_fc_loc_delete_row TO lt_excluding.
    APPEND cl_gui_alv_grid=>mc_fc_loc_insert_row TO lt_excluding.
    APPEND cl_gui_alv_grid=>mc_fc_loc_paste TO lt_excluding.
    APPEND '&SORT_ASC' TO lt_excluding.
    wa_layout-stylefname = 'STYLE' .
call METHOD grid->set_table_for_first_display
  EXPORTING
*    i_buffer_active               =                  " Buffering Active
*    i_bypassing_buffer            =                  " Switch Off Buffer
*    i_consistency_check           =                  " Starting Consistency Check for Interface Error Recognition
*    i_structure_name              =                  " Internal Output Table Structure Name
*    is_variant                    =                  " Layout
    i_save                        =  'A'                " Save Layout
    i_default                     = 'X'              " Default Display Variant
    is_layout                     =  wa_layout                " Layout
*    is_print                      =                  " Print Control
*    it_special_groups             =                  " Field Groups
    it_toolbar_excluding          =   lt_excluding              " Excluded Toolbar Standard Functions
*    it_hyperlink                  =                  " Hyperlinks
*    it_alv_graphics               =                  " Table of Structure DTC_S_TC
*    it_except_qinfo               =                  " Table for Exception Quickinfo
*    ir_salv_adapter               =                  " Interface ALV Adapter
  CHANGING
    it_outtab                     =  LT_FINAL[]               " Output Table
    it_fieldcatalog               =  LT_FIELDCAT                " Field Catalog
*    it_sort                       =                  " Sort Criteria
*    it_filter                     =                  " Filter Criteria
*  EXCEPTIONS
*    invalid_parameter_combination = 1                " Wrong Parameter
*    program_error                 = 2                " Program Errors
*    too_many_lines                = 3                " Too many Rows in Ready for Input Grid
*    others                        = 4
  .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

 ELSE.

    is_stable = VALUE #( row = abap_true
                           col = abap_true ).

    CALL METHOD grid->refresh_table_display
      EXPORTING
        is_stable = is_stable                 " With Stable Rows/Columns
*       i_soft_refresh =                  " Without Sort, Filter, etc.
      EXCEPTIONS
        finished  = 1                " Display was Ended (by Export)
        OTHERS    = 2.
    IF sy-subrc <> 0.
*    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*      WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
  ENDIF.

ENDMODULE.






MODULE user_command_9024 INPUT.

CASE OK_CODE.
  WHEN 'DISPLAY'.

    PERFORM get_data.


  WHEN 'BACK' OR 'CANCEL' OR 'EXIT'.
    LEAVE TO SCREEN 0.
  WHEN 'SAVE'.
    LOOP AT LT_FINAL ASSIGNING FIELD-SYMBOL(<LFS_FINAL>) WHERE container_name IS NOT INITIAL.

        CALL FUNCTION 'NUMBER_GET_NEXT'
        EXPORTING
          nr_range_nr                   = '01'
          object                        = 'ZPK_RNUM'
*         QUANTITY                      = '1'
*         SUBOBJECT                     = ' '
*         TOYEAR                        = '0000'
*         IGNORE_BUFFER                 = ' '
       IMPORTING
         NUMBER                        = <lfs_final>-CONTAINER_DY_NUM
*         QUANTITY                      =
*         RETURNCODE                    =
       EXCEPTIONS
         INTERVAL_NOT_FOUND            = 1
         NUMBER_RANGE_NOT_INTERN       = 2
         OBJECT_NOT_FOUND              = 3
         QUANTITY_IS_0                 = 4
         QUANTITY_IS_NOT_1             = 5
         INTERVAL_OVERFLOW             = 6
         BUFFER_OVERFLOW               = 7
         OTHERS                        = 8
                .
      IF sy-subrc <> 0.
* Implement suitable error handling here
      ENDIF.

      ENDLOOP.

      IF LT_FINAL IS NOT INITIAL.
        "MODIFY ZTB_ALL_CONAME FROM TABLE LT_FINAL.
      ENDIF.
  WHEN OTHERS.
 ENDCASE.
ENDMODULE.





***************ZMP_PK_TASK7_C01***************
CLASS lcl_events IMPLEMENTATION.

   METHOD user_command_mt .
    CASE e_ucomm.
      WHEN '&SORT_ASC'.
*      Action
*    WHEN .
      WHEN OTHERS.
    ENDCASE.
  ENDMETHOD.

  METHOD changed_mt.

  DATA : lt_mod_cells TYPE lvc_t_modi,
         ls_mod_cell  TYPE LVC_S_MODI,
         lv_value type unit.

       lt_mod_cells = er_data_changed->mt_mod_cells.

  DATA(wa_mod_cells) = VALUE #( er_data_changed->mt_mod_cells[ 1 ] OPTIONAL ).
    LOOP AT lt_final ASSIGNING FIELD-SYMBOL(<lfs_final>) FROM wa_mod_cells-row_id.

      IF sy-tabix NE wa_mod_cells-row_id.
        EXIT.
      ENDIF.

      IF WA_MOD_CELLS-FIELDNAME = 'CONTAINER_UOM' AND WA_MOD_CELLS-VALUE NE 'EA'.
        MESSAGE 'Invalid Input--Please put only "EA"' TYPE 'E'.
      ENDIF.


      <LFS_FINAL>-CHANGED_BY = SY-UNAME.
      <LFS_FINAL>-CHANGED_ON = SY-DATUM.
      <LFS_FINAL>-CHANGED_TIME = SY-UZEIT.
      <lfs_final>-status = '@09@'.

    ENDLOOP.


    is_stable = value #( row = abap_true
                         col = abap_true ).

   call METHOD grid->refresh_table_display
    EXPORTING
      is_stable      =     is_stable
*      i_soft_refresh =                  " Without Sort, Filter, etc.
    EXCEPTIONS
      finished       = 1                " Display was Ended (by Export)
      others         = 2
    .
  IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*     WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.




  ENDMETHOD.


 ENDCLASS.



**********************ZMP_PK_TASK7_F01****************
FORM get_data .
*
 IF lv_container_name IS INITIAL and lv_erdat IS INITIAL.
    SELECT vbeln,
         posnr,
         matnr,
         kwmeng,
         kmein,
         netpr,
         waerk,
         container_name,
         container_qty,
         container_uom,
         returnable,
         container_dy_num,
         ernam,
         erdat,
         erzet,
         changed_by,
         changed_on,
         changed_time
      INTO CORRESPONDING FIELDS OF TABLE @lt_final
      FROM ztb_all_coname
      WHERE ERDAT IN @S_ERDAT AND VBELN IN @S_VBELN.

  ELSE.

    IF lv_erdat is NOT INITIAL and lv_container_name is NOT INITIAL .
      data(lv_string) = |{ 'erdat = @lv_erdat' } { ' AND  container_name = @lv_container_name' }|.
    ELSEIF lv_erdat is NOT INITIAL and lv_container_name is INITIAL .
       lv_string =  'erdat = @lv_erdat'.
    ELSEIF  lv_erdat is INITIAL and lv_container_name is NOT INITIAL .
      lv_string = 'container_name = @lv_container_name'.
    ENDIF.



 SELECT    vbeln,
           posnr,
           matnr,
           kwmeng,
           kmein,
           netpr,
           waerk,
           container_name,
           container_qty,
           container_uom,
           returnable,
           container_dy_num,
           ernam,
           erdat,
           erzet,
           changed_by,
           changed_on,
           changed_time
      INTO CORRESPONDING FIELDS OF TABLE @lt_final
      FROM ztb_all_coname
      WHERE (LV_STRING) AND
       ERDAT IN @S_ERDAT AND VBELN IN @S_VBELN.
*

  ENDIF.

 LOOP AT lt_final ASSIGNING FIELD-SYMBOL(<lfs_final>).

    IF <lfs_final>-container_dy_num IS INITIAL.
      IF <lfs_final>-container_name IS NOT INITIAL.
        <lfs_final>-status = '@09@'.
      ELSE.
        <lfs_final>-status = '@0A@'.
      ENDIF.
    ELSE.
      <lfs_final>-status = '@08@'.
    ENDIF.


    IF <lfs_final>-container_dy_num IS NOT INITIAL.
      <lfs_final>-style = VALUE #( BASE <lfs_final>-style
                             ( fieldname = 'CONTAINER_NAME'
                               style = cl_gui_alv_grid=>mc_style_disabled
                              )

                              ( fieldname = 'CONTAINER_QTY'
                                style = cl_gui_alv_grid=>mc_style_disabled
                              )

                              ( fieldname = 'CONTAINER_UOM'
                                style = cl_gui_alv_grid=>mc_style_disabled
                              )

                              ( fieldname = 'RETURNABLE'
                                 style = cl_gui_alv_grid=>mc_style_disabled
                              )


                              ).
    ELSE.
      <lfs_final>-style = VALUE #( BASE <lfs_final>-style
                       ( fieldname = 'CONTAINER_NAME'
                         style = cl_gui_alv_grid=>mc_style_enabled )

                         ( fieldname = 'CONTAINER_QTY'
                                style = cl_gui_alv_grid=>mc_style_enabled
                          )

                         ( fieldname = 'CONTAINER_UOM'
                                style = cl_gui_alv_grid=>mc_style_enabled
                          )

                          ( fieldname = 'RETURNABLE'
                                 style = cl_gui_alv_grid=>mc_style_enabled
                           )
                          ).
    ENDIF.


  ENDLOOP.

ENDFORM.


**************ZMP_PK_TASK7_TOP*********************
PROGRAM ZMP_PK_TASK7.
TABLES : ZTB_ALL_CONAME.


DATA : CC3 type ref to cl_gui_custom_container, "Hold the ALV
       grid type ref to cl_gui_alv_grid,        "Display The Alv
       lt_fieldcat type lvc_t_fcat.


DATA: lv_erdat  TYPE ERDAT,
      lv_vbeln TYPE VBELN,
      is_stable TYPE lvc_s_stbl ,
      lv_container_name TYPE ZCONTNAME,
      container_uom type unit,
      container_dy_num type zcontdnum,
      ok_code           TYPE sy-ucomm,
      wa_layout type lvc_s_layo .

DATA : begin of lt_final occurs 1005.
        include STRUCTURE ztb_all_coname.
data : status type char10.
data : style TYPE lvc_t_styl.
data : END OF lt_final.

data : wa_table like LINE OF lt_final.

DATA : lt_excluding type ui_functions,
       lt_style TYPE lvc_t_styl,
       wa_style TYPE lvc_s_styl.




SELECTION-SCREEN : BEGIN OF SCREEN 9047 AS SUBSCREEN.
   SELECT-OPTIONS : S_ERDAT FOR lV_ERDAT,
                    S_VBELN FOR LV_VBELN.
SELECTION-SCREEN : END OF SCREEN 9047.
